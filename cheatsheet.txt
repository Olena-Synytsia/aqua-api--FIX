Users.js
import { Router } from 'express';
import {
  getUsersController,
  // createUserController,
  getCurrenttUserController,
  updateCurrentUserController,
} from '../controllers/users.js';
import {
  registerUserCtrl,
  loginUserCtrl,
  logoutUserCtrl,
} from '../controllers/auth.js';
import { ctrlWrapper } from '../utils/ctrlWrapper.js';
import { validateBody } from '../middlewares/validateBody.js';
import { authenticate } from '../middlewares/authenticate.js';
import { upload } from '../middlewares/multer.js';
import { bodyCleaner } from '../middlewares/bodyCleaner.js';
import { editUserSchema } from '../validation/users.js';
import { registerUserSchema, loginUserSchema } from '../validation/auth.js';

const router = Router();

router.post(
  '/signup',
  validateBody(registerUserSchema),
  ctrlWrapper(registerUserCtrl),
);
router.post(
  '/signin',
  validateBody(loginUserSchema),
  ctrlWrapper(loginUserCtrl),
);

router.use(authenticate);

router.get('/', ctrlWrapper(getUsersController));

router.get('/current', ctrlWrapper(getCurrenttUserController));

router.post('/logout', ctrlWrapper(logoutUserCtrl));

router.patch(
  '/current',
  upload.single('photo'),
  bodyCleaner,
  validateBody(editUserSchema),
  ctrlWrapper(updateCurrentUserController),
);

export default router;

auth.js:
import { Router } from 'express';
import { validateBody } from '../middlewares/validateBody.js';
import {
  // registerUserSchema,
  requestResetEmailSchema,
  resetPasswordSchema,
  confirmAuthSchema,
  // loginUserSchema,
} from '../validation/auth.js';
import { ctrlWrapper } from '../utils/ctrlWrapper.js';
import {
  // registerUserCtrl,
  refreshSessionCtrl,
  // logoutUserCtrl,
  requestResetEmailCtrl,
  resetPasswordCtrl,
  getAuthUrlCtrl,
  confirmAuthCtrl,
  // loginUserCtrl,
} from '../controllers/auth.js';

const router = Router();

// router.post(
//   '/signup',
//   validateBody(registerUserSchema),
//   ctrlWrapper(registerUserCtrl),
// );
// router.post(
//   ' /signin',
//   validateBody(loginUserSchema),
//   ctrlWrapper(loginUserCtrl),
// );

router.post('/refresh', ctrlWrapper(refreshSessionCtrl));

// router.post('/logout', ctrlWrapper(logoutUserCtrl));

router.post(
  '/send-reset-email',
  validateBody(requestResetEmailSchema),
  ctrlWrapper(requestResetEmailCtrl),
);

router.post(
  '/reset-pwd',
  validateBody(resetPasswordSchema),
  ctrlWrapper(resetPasswordCtrl),
);

router.get('/get-oauth-url', ctrlWrapper(getAuthUrlCtrl));

router.post(
  '/confirm-oauth',
  validateBody(confirmAuthSchema),
  ctrlWrapper(confirmAuthCtrl),
);

export default router;
