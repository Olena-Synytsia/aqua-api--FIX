tags:
  - Users
summary: Get list of Users
operationId: getAllUsers
description: Retrieve a paginated, and sorted list of users.
security:
  - bearerAuth: []
parameters:
  - in: query
    name: page
    schema:
      type: integer
    description: Page number for pagination.
    example: 1
  - in: query
    name: perPage
    schema:
      type: integer
    description: Number of items per page.
    example: 10
  - in: query
    name: sortBy
    schema:
      type: string
      enum: [name, email, gender]
    description: Field by which to sort the users.
    example: 'name'
  - in: query
    name: sortOrder
    schema:
      type: string
      enum: [ASC, DESC]
    description: Order to sort the users (ascending or descending).
    example: 'ASC'
responses:
  '200':
    description: Successfully retrieved paginated, and sorted users
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully retrieved users.
            data:
              type: array
              items:
                $ref: '../../components/schemas/users.yaml'
            pagination:
              type: object
              properties:
                total:
                  type: integer
                  example: 100
                page:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 10
                totalPages:
                  type: integer
                  example: 10
  '401':
    $ref: '../../components/responses/401.yaml'
  '500':
    $ref: '../../components/responses/500.yaml'
